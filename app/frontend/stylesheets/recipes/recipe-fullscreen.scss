@import '../shared/colors.scss';

$nav_height: 6.5rem;
$progress_bar_height: 0.5rem;
$instruction_number_size: 6.5rem;

// sm, md, lg, etc... are used only in the context of this CSS file.
// Consider globally defined sizes or better naming if we have to re-use these
// sizes elsewhere.
$font_size_sm: 1.5rem;
$font_size_md: 2.5rem;
$line_height_sm: 2rem;
$line_height_md: 3.5rem;

$breakpoint_tablet: 600px;

// When the modal is opened we dynamically add this class to `body`, which
// prevents the background from scrolling while the modal is open.
body.recipe-fullscreen--open {
  overflow: hidden;
}

// Fullscreen Structure

.recipe-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  display: none;
  box-sizing: border-box;
  width: 100vw;
  height: 100vh;
  background-color: $off-white;

  &.open {
    display: block;
  }
}
.recipe-fullscreen__slide-wrapper {
  display: flex;
  height: 100%;
  margin: 0;
  padding: 0;
  list-style: none;
  transition: transform 400ms ease-in-out;
}
.recipe-fullscreen__slide {
  box-sizing: border-box;
  min-width: 100%;
  height: 100%;
  // The top padding should leave enough height for the progress bar
  // The bottom padding should leave enough height for the nav bar
  padding: $progress_bar_height 2rem $nav_height 2rem;
  overflow-y: auto;
}

// Ingredients

.recipe-fullscreen__slide--ingredients {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  font-size: $font_size_sm;
  line-height: $line_height_sm;

  h3 {
    color: $dark-gray;
  }

  .ingredient {
    display: flex;
    align-items: flex-start;
    margin: 1rem 0;

    input[type='checkbox'] {
      width: $line_height_sm;
      min-width: $line_height_sm;
      height: $line_height_sm;
      margin: 0 1rem 0 0;
      vertical-align: middle;
    }
    label {
      padding-right: 0.5rem;
    }
    input[type='checkbox']:checked + label {
      text-decoration: line-through;
    }
  }

  // Use larger font for tablets
  @media (min-width: $breakpoint_tablet) {
    font-size: calc(1.5 * $font_size_sm);
    line-height: calc(1.5 * $line_height_sm);

    .ingredient {
      input[type='checkbox'] {
        width: calc(1.5 * $line_height_sm);
        min-width: calc(1.5 * $line_height_sm);
        height: calc(1.5 * $line_height_sm);
      }
    }
  }
}

// Instructions

.recipe-fullscreen__slide--instruction {
  .instruction-number {
    width: $instruction_number_size;
    min-width: $instruction_number_size;
    height: $instruction_number_size;
    margin: 0.5rem auto 0 auto;
    color: white;
    font-size: calc($instruction_number_size / 2);
    line-height: $instruction_number_size;
    text-align: center;
    background-color: black;
    border-radius: 50%;
    cursor: pointer;
  }
  .instruction-text {
    margin-top: 1.5rem;
    font-size: $font_size_md;
    line-height: $line_height_md;
  }

  // Use larger font for tablets
  @media (min-width: $breakpoint_tablet) {
    .instruction-text {
      font-size: calc(1.5 * $font_size_md);
      line-height: calc(1.5 * $line_height_md);
    }
  }
}

//  Progress Bar

.recipe-fullscreen__progress {
  position: fixed;
  bottom: $nav_height;
  left: 0;
  z-index: 1001;
  width: 100vw;
  height: $progress_bar_height;
  min-height: $progress_bar_height;
  background-color: $white;
  border-top: 1px solid $dark-gray;
}
.recipe-fullscreen__progress-value {
  width: 0;
  height: 100%;
  background-color: $dark-gray;
  transition: width 400ms ease-in-out;
}

// Nav

.recipe-fullscreen__nav {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 1001;
  display: flex;
  justify-content: center;
  align-items: stretch;
  width: 100vw;
  height: $nav_height;
  min-height: $nav_height;

  button {
    flex-grow: 1;
    height: initial;
    font-size: $font_size_md;
    // Override `btn--hollow` borders
    border: none;
    border-radius: 0;

    // Override `btn--hollow` which adds a hover state
    &:hover {
      opacity: initial;
    }

    &:active {
      background-color: $light-gray;
    }

    svg {
      width: calc($nav_height - 0.25rem);
      height: calc($nav_height - 0.25rem);
    }

    // The 'x' svg is naturally a bit larger within a given fixed size
    // Make it slightly smaller
    &:nth-child(2) svg {
      width: calc($nav_height - 1.25rem);
      height: calc($nav_height - 1.25rem);
    }
  }
}
